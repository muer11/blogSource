(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{393:function(e,t,n){"use strict";n.r(t);var l=n(45),i=Object(l.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"react-hooks-的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-hooks-的使用"}},[e._v("#")]),e._v(" React Hooks 的使用")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("什么是React Hooks?")])]),e._v(" "),n("li",[n("p",[e._v("和class组件相比较，它的优点是什么？")])]),e._v(" "),n("li",[n("p",[e._v("注意事项？")])]),e._v(" "),n("li",[n("p",[e._v("性能优化方案？\n1.\n2.\n3. useCallback\n4. useMemo\n5. useRef\n6.")])]),e._v(" "),n("li",[n("p",[e._v("状态逻辑复用")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("Minxin 混入")]),e._v(" "),n("ul",[n("li",[e._v("本质：将一个对象的属性拷贝到另一个对象上面去。这是继承所不支持的。")])]),e._v(" "),n("p",[e._v("代码实现：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function setMixin(target, mixin) {\n   if (arguments[2]) {\n      for (var i = 2, len = arguments.length; i < len; i++) {\n         target.prototype[arguments[i]] = mixin.prototype[arguments[i]];\n      }\n   }\n   else {\n      for (var methodName in mixin.prototype) {\n         if (!Object.hasOwnProperty(target.prototype, methodName)) {\n         target.prototype[methodName] = mixin.prototype[methodName];\n         }\n      }\n   }\n}\nsetMixin(User,LogMixin,'actionLog');\nsetMixin(Goods,LogMixin,'requestLog');\n")])])]),n("ul",[n("li",[n("p",[e._v("实际运用场景：\nUnderscore的_.extend方法、JQuery的extend方法、React中通过createClass创建React组件中使用mixins")])]),e._v(" "),n("li",[n("p",[e._v("危害：")]),e._v(" "),n("ul",[n("li",[e._v("Mixin 可能会相互依赖，相互耦合，不利于代码维护")]),e._v(" "),n("li",[e._v("不同的Mixin中的方法可能会相互冲突")]),e._v(" "),n("li",[e._v("Mixin非常多时，组件是可以感知到的，甚至还要为其做相关处理，这样会给代码造成滚雪球式的复杂性")])])])])]),e._v(" "),n("li",[n("p",[e._v("HOC 高阶组件")]),e._v(" "),n("ol",[n("li",[e._v("为了解决Mixin带来的问题，所以引入了HOC，用来重用组件逻辑。")]),e._v(" "),n("li",[e._v("其采用装饰模式，在不改变对象自身的基础上，在程序运行期间给对象动态地添加职责。与继承相比，装饰者是一种更轻便灵活的做法。")]),e._v(" "),n("li",[e._v("实现原理")]),e._v(" "),n("li",[e._v("和Mixin的比较")]),e._v(" "),n("li",[e._v("仍存在的问题")])])]),e._v(" "),n("li",[n("p",[e._v("Hooks")]),e._v(" "),n("ol",[n("li",[e._v("React v16.7.0-alpha")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("useEffect(() => {\n   // 只要组件render后就会执行\n   return ()=>{}\n});\nuseEffect(() => {\n   // 只有count改变时才会执行\n   return ()=>{}\n},[count]);\n")])])]),n("ol",[n("li",[n("p",[e._v("参数：")]),e._v(" "),n("ol",[n("li",[e._v("函数\n"),n("ol",[n("li",[e._v("由于这个函数形成了闭包，保证了我们上一次执行函数存储的变量不被销毁和污染，因此即使执行了return清除工作，下一次仍能取到相应的state")])])]),e._v(" "),n("li",[e._v("状态依赖（数组）")])])]),e._v(" "),n("li",[n("p",[e._v("声明约束：")]),e._v(" "),n("ul",[n("li",[e._v("不要在循环，条件或嵌套函数中调用Hook")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('// 安装\nnpm install eslint-plugin-react-hooks --save-dev\n// 配置\n{\n   "plugins": [\n      // ...\n      "react-hooks"\n   ],\n   "rules": {\n      // ...\n      "react-hooks/rules-of-hooks": "error"\n   }\n}\n')])])])]),e._v(" "),n("li",[n("p",[e._v("优点：")]),e._v(" "),n("ol",[n("li",[e._v("减少状态逻辑复用的风险 （Mixin）")]),e._v(" "),n("li",[e._v("避免地狱式嵌套 (HOC)")]),e._v(" "),n("li",[e._v("让组件更容易理解（class）")]),e._v(" "),n("li")])])])])])])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6844903815762673671",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),e._v(" "),n("ol",{attrs:{start:"6"}},[n("li",[n("p",[e._v("比较 Class 和 Hooks")]),e._v(" "),n("ol",[n("li",[e._v("Class：有实例、生命周期函数")]),e._v(" "),n("li",[e._v("Hooks：\n"),n("ol",[n("li",[e._v("弥补类组件的不足：\n"),n("ul",[n("li",[e._v("状态逻辑难复用\n"),n("ul",[n("li",[e._v("容易导致层级冗余")])])]),e._v(" "),n("li",[e._v("趋向复杂难以维护\n"),n("ul",[n("li",[e._v("多处对状态的调用和处理")]),e._v(" "),n("li",[e._v("不同生命周期的逻辑处理")])])]),e._v(" "),n("li",[e._v("this指向问题")])])]),e._v(" "),n("li",[e._v("能在无需修改组件结构的情况下复用状态逻辑（自定义 Hooks ）")]),e._v(" "),n("li",[e._v("能将组件中相互关联的部分拆分成更小的函数（比如设置订阅或请求数据）")]),e._v(" "),n("li",[e._v("副作用的关注点分离：副作用指那些没有发生在数据向视图转换过程中的逻辑，如 ajax 请求、访问原生dom 元素、本地持久化缓存、绑定/解绑事件、添加订阅、设置定时器、记录日志等。以往这些副作用都是写在类组件生命周期函数中的。而 useEffect 在全部渲染完毕后才会执行，useLayoutEffect 会在浏览器 layout 之后，painting 之前执行。")])])]),e._v(" "),n("li",[e._v("useState & useMemo & useCallback\n"),n("ol",[n("li",[e._v("每次渲染都是独立的闭包")]),e._v(" "),n("li",[e._v("useState 不会把新的 state 和旧的 state 进行合并，而是直接替换")]),e._v(" "),n("li",[e._v("可通过将回调函数当做参数传递给setState，实现函数式更新")]),e._v(" "),n("li")])]),e._v(" "),n("li")]),e._v(" "),n("p",[e._v("是不是所有的Class组件都能用Hooks代替？")])]),e._v(" "),n("li",[n("p",[e._v("Hooks如何实现性能优化？")]),e._v(" "),n("ol",[n("li",[e._v("Object.is(浅比较)\n比较新/旧 state 是否相等，如果修改状态时，传的状态值没有变化，则不重新渲染。所以可以通过 setState 传对应状态值。")]),e._v(" "),n("li",[e._v("减少渲染次数\n"),n("ol",[n("li",[e._v("默认情况，只要父组件状态变了（不管子组件依不依赖该状态），子组件也会重新渲染。")]),e._v(" "),n("li",[e._v("优化方案：\n"),n("ol",[n("li",[e._v("类组件：使用 pureComponent；")]),e._v(" "),n("li",[e._v("函数组件：\n"),n("ol",[n("li",[e._v("React.memo()\n"),n("ol",[n("li",[e._v("当？时候就算如此设置也无效？")]),e._v(" "),n("li")])]),e._v(" "),n("li",[e._v("React.useCallback() 优化针对于子组件渲染\n"),n("ol",[n("li",[e._v("返回一个 memoized 回调函数。")]),e._v(" "),n("li",[e._v("在依赖参数不变的情况下，返回的回调函数是同一个引用地址；每当依赖参数发生改变useCallback就会自动重新返回一个新的 memoized 函数（地址发生改变）。")])])]),e._v(" "),n("li",[e._v("React.useMemo() 优化针对于当前组件高开销的计算\n"),n("ol",[n("li",[e._v("避免在每次渲染时都进行高开销的计算的优化的策略。")]),e._v(" "),n("li",[e._v("返回一个 memoized 值。")]),e._v(" "),n("li",[e._v("在依赖参数不变的的情况返回的是上次第一次计算的值；每当依赖参数发生改变useMemo就会自动重新计算返回一个新的 memoized 值。")]),e._v(" "),n("li")])])]),e._v(" "),n("a",{attrs:{href:"https://juejin.cn/post/6844904032113278990",target:"_blank",rel:"noopener noreferrer"}},[e._v("彻底理解 React hook useCallback和useMemo的区别"),n("OutboundLink")],1)])])])])])])])]),e._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6844903985338400782",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("可以把自己有疑惑的点都记录下来，再一个个地解决")]),e._v(" "),n("h1",{attrs:{id:"阅读react源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#阅读react源码"}},[e._v("#")]),e._v(" 阅读React源码")]),e._v(" "),n("p",[e._v("参考文档：\n"),n("a",{attrs:{href:"https://juejin.cn/post/6844903985338400782#heading-17",target:"_blank",rel:"noopener noreferrer"}},[n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=i.exports}}]);